@model RandomSiteControlsMVC.MVC.Models.TabStrip.TabStripModel

@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Mvc;
@using RandomSiteControlsMVC.Helpers;
@using Telerik.Sitefinity.Services;

@Html.Script(ScriptRef.JQuery, RSCUtil.SfsConfig.jQueryScriptPlaceholder)
@Html.Script(ScriptRef.KendoWeb, RSCUtil.SfsConfig.KendoScriptPlaceholder)

@Html.Script(Url.EmbeddedResource("RandomSiteControlsMVC.Reference", "RandomSiteControlsMVC.MVC.Views.TabStrip.Resources.kendoui.js"), RSCUtil.SfsConfig.DefaultScriptPlaceholder)
@Html.StyleSheet(Url.EmbeddedResource("RandomSiteControlsMVC.Reference", "RandomSiteControlsMVC.MVC.Views.TabStrip.Resources.tabstrip.min.css"), "head")


@if (SystemManager.IsDesignMode)
{
    @*This is so the designer has something to render instantly on a change as SF has no way to notify on save*@
    <div class="k-tabstrip-wrapper">
        <div class="sfs-tabstrip k-widget k-header k-tabstrip k-floatwrap k-tabstrip-top" data-type="kendo">
            <ul class="sfs-tabstrip-configurator k-tabstrip-items k-reset">
                @{int i = 0;}
                @foreach (var tab in Model.Tabs)
            {
                    <li class="k-item @(i==0 ? "k-first" : "")@(i==Model.Tabs.Count() - 1 ? "k-last" : "") @(tab.Selected ? "k-state-active" : "k-state-default")">
                        <span class="k-loading k-complete"></span>
                        <span class="k-link">@tab.Title</span>
                    </li>
                    i++;
                }
            </ul>
        </div>
    </div>
}
else
{
    <ul class="sfs-tabstrip-configurator" role="tablist" data-type="kendo" data-tab-position="@Model.TabPosition" data-classname="@(Model.ClassName)">
        @{int i = 1;}
        @foreach (var tab in Model.Tabs)
        {
            <li role="presentation" class='@(tab.Selected ? "k-state-active" : "")'>
                <a aria-controls="@tab.Title.ToLower()" role="tab">@tab.Title</a>
            </li>
            i++;
        }
    </ul>
}
