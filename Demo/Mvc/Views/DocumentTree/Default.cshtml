@model RandomSiteControlsMVC.MVC.Models.DocumentTree.DocumentTreeModel

@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Mvc;
@using RandomSiteControlsMVC.Helpers;
@using Telerik.Sitefinity.Services;
@using RandomSiteControlsMVC.MVC.Models.DocumentTree

@Html.Script(ScriptRef.JQuery, RSCUtil.SfsConfig.jQueryScriptPlaceholder)
@Html.Script(ScriptRef.KendoWeb, RSCUtil.SfsConfig.KendoScriptPlaceholder)

@Html.Script(Url.EmbeddedResource("RandomSiteControlsMVC.Reference", "RandomSiteControlsMVC.MVC.Views.DocumentTree.Resources.documenttree.es5.min.js"), RSCUtil.SfsConfig.DefaultScriptPlaceholder)
@Html.StyleSheet(Url.EmbeddedResource("RandomSiteControlsMVC.Reference", "RandomSiteControlsMVC.MVC.Views.DocumentTree.Resources.documenttree.min.css"), "head")

<div class="sfs-document-tree @(Model.RenderMode.ToString().ToLower())" data-mode="@Model.RenderMode" data-expand-levels="@Model.ExpandLevelDepth" style="visibility: hidden">
    <ul class="root">
        @foreach (var node in Model.Nodes)
        {
            @RenderSubLevelsRecursive(node);
        }
    </ul>
</div>

@*Here is specified the rendering for the sub levels*@
@helper RenderSubLevelsRecursive(DocumentTreeNode node)
{
    <li >
        <a href="@node.NavigateUrl" target="@node.Target" class="@(!node.IsFolder ? "document" : "folder")">
            @if (node.IsFolder)
            {
                if (!String.IsNullOrEmpty(node.ExpandedImageUrl)) {
                    <img src="@node.ExpandedImageUrl" class="expanded-folder" />
                }
            }
            else
            {
                <i class="icon-file icon-txt icon-sm">
                    <span class="icon-txt-@(node.Extension)">@(node.Extension)</span>
                </i>
            }
            <span class="title">@node.Title</span>
        </a>

        @if (node.Nodes.Count > 0)
        {
            <ul class="">
                @foreach (var childNode in node.Nodes)
                {
                    @RenderSubLevelsRecursive(childNode)
                }
            </ul>
        }
    </li>
}

