@model RandomSiteControlsMVC.MVC.Models.DocumentTree.DocumentTreeModel

@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Mvc;
@using RandomSiteControlsMVC.Helpers;
@using Telerik.Sitefinity.Services;
@using RandomSiteControlsMVC.MVC.Models.DocumentTree

@Html.Script(ScriptRef.JQuery, RSCUtil.SfsConfig.jQueryScriptPlaceholder)

@Html.Script("/Mvc/Views/DocumentTree/Resources/documenttree.js", RSCUtil.SfsConfig.DefaultScriptPlaceholder)
@Html.StyleSheet("/Mvc/Views/DocumentTree/Resources/documenttree.min.css", "head")

@{ 
    var parentName = "accordian-" + Guid.NewGuid().ToString();
}

@*@Html.Script(Url.EmbeddedResource("RandomSiteControlsMVC.Reference", "RandomSiteControlsMVC.MVC.Views.DocumentTree.Resources.documenttree.es5.min.js"), RSCUtil.SfsConfig.DefaultScriptPlaceholder)
    @Html.StyleSheet(Url.EmbeddedResource("RandomSiteControlsMVC.Reference", "RandomSiteControlsMVC.MVC.Views.DocumentTree.Resources.documenttree.min.css"), "head")*@

<div class="sfs-document-tree panelbar" data-mode="panelbar" data-expand-levels="@Model.ExpandLevelDepth">
    <div id="@parentName">
        @{ 
            var index = 0;
        }
        @foreach (var node in Model.Nodes)
        {
            @RenderRootNodes(node, parentName, index);
            index++;
        }
    </div>
</div>


@helper RenderRootNodes(DocumentTreeNode node, string parentName, int index)
{
    <div class="card">
        <div class="card-header p-1" id="@("heading" + index)">
            <button class="btn btn-link btn-block text-left" data-toggle="collapse" data-target="#@("collapse" + index)" aria-expanded="true" aria-controls="@("collapse" + index)">
                <i class="fas fa-folder"></i> @node.Title
            </button>
        </div>

        <div id="@("collapse" + index)" class="collapse show" aria-labelledby="@("heading" + index)" data-parent="#@parentName">
            <div class="card-body">
                <ul class="">
                    @foreach (var childNode in node.Nodes)
                    {
                        @RenderSubLevelsRecursive(childNode)
                    }
                </ul>
            </div>
        </div>
    </div>
}


@helper RenderSubLevelsRecursive(DocumentTreeNode node)
{
    <li>
        @if (node.IsFolder)
        {
            <div class="folder mt-1">
                <i class="fas fa-folder-open"></i> <span class="title">@node.Title</span>
            </div>
        }
        else
        {
            var icon = "far fa-file";
            <a href="@node.NavigateUrl" target="@node.Target" class="document">
                <i class="@icon ext-@node.Extension"></i>
                <span class="title">@node.Title</span>
            </a>
        }


        @if (node.Nodes.Count > 0)
        {
            <ul class="">
                @foreach (var childNode in node.Nodes)
                {
                    @RenderSubLevelsRecursive(childNode)
                }
            </ul>
        }
    </li>
}

